---
import Layout from '../../../layouts/Layout.astro';
import { hobbies } from '../../../data/hobbies.json';
import currencyData from '../../../data/currencies.json';

export function getStaticPaths() {
  const languages = ['en', 'es', 'de', 'fr', 'pt', 'ja', 'ar', 'hi'];
  const paths = [];
  if (hobbies && Array.isArray(hobbies)) {
    hobbies.forEach(hobby => {
      if (hobby?.id && hobby?.name && hobby.name['en']) {
        languages.forEach(lang => {
          paths.push({ params: { lang, hobby: hobby.id } });
        });
      }
    });
  }
  return paths;
}

const { lang, hobby: hobbyId } = Astro.params;
const hobby = hobbies.find(h => h.id === hobbyId);

const getText = (field, fallback = '') => field?.[lang] || field?.['en'] || fallback;
const getArray = (field) => field?.[lang] || field?.['en'] || [];

const allItems = {
    beginner: hobby.breakdown?.beginner?.keyItems || [],
    intermediate: hobby.breakdown?.intermediate?.keyItems || [],
    advanced: hobby.breakdown?.advanced?.keyItems || []
};

// **FIX:** This line now safely gets the stats data for the current language
const currentStats = getArray(hobby.stats);
---
<Layout title={`Cost of ${getText(hobby.name)}`} lang={lang}>
  <div class="bg-gray-50/50 py-8">
    <div class="max-w-7xl mx-auto px-4">
      <div class="text-sm breadcrumbs">
        <ul><li><a href={`/${lang}/`}>Home</a></li> <li><a>Hobbies</a></li> <li>{getText(hobby.name)}</li></ul>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mt-4" x-data="calculatorData()">
        <div class="lg:col-span-2 space-y-8">
          <div class="card bg-white shadow-xl p-4 sm:p-8">
             </div>
          <div class="card bg-white shadow-xl p-4 sm:p-8">
             </div>
          <div class="card bg-white shadow-xl p-4 sm:p-8">
             </div>
        </div>

        <div class="lg:col-span-1 space-y-8">
          <div class="card bg-white shadow-xl">
            <div class="card-body">
              <h3 class="card-title">Recommended Gear</h3>
              {getArray(hobby.recommendedGear).map(gear => (
                <a href={gear.link} target="_blank" class="block p-2 rounded-lg hover:bg-gray-50">
                  <div class="flex gap-4 items-center">
                    <div class="flex-shrink-0 w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>
                    </div>
                    <div>
                      <p class="font-bold leading-tight">{getText(gear.name)}</p>
                      <p class="text-sm text-gray-600">${gear.price}</p>
                      <p class="text-xs text-indigo-600 font-semibold mt-1">View on Amazon &rarr;</p>
                    </div>
                  </div>
                </a>
              ))}
            </div>
          </div>
          
          {currentStats.length > 0 &&
            <div class="card bg-white shadow-xl">
              <div class="card-body">
                <h3 class="card-title">{getText(hobby.name)} Stats</h3>
                <ul class="space-y-2 mt-2">
                  {currentStats.map(stat => (
                     <li class="flex justify-between text-sm py-1 border-b border-gray-100">
                       <span class="text-gray-500">{getText(stat.label)}</span>
                       <span class="font-semibold">{getText(stat.value)}</span>
                     </li>
                  ))}
                </ul>
              </div>
            </div>
          }
        </div>
      </div>
    </div>
  </div>
  
  <script is:inline src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
  <script define:vars={{ allItems, rates: currencyData.rates, lang }}>
    // The Alpine.js script content is the same as the previous correct version
    document.addEventListener('alpine:init', () => { /* ... */ });
  </script>
</Layout>

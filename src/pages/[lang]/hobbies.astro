---
import Layout from '../../layouts/Layout.astro';
import { hobbies } from '../../data/hobbies.json';
import currencyData from '../../data/currencies.json';
import uiLabels from '../../data/uiLabels.json';

// --- Page Generation Logic ---
export function getStaticPaths() {
  const languages = ['en', 'es', 'de', 'fr', 'pt', 'ja', 'ar', 'hi'];
  const paths = [];
  languages.forEach(lang => {
    paths.push({ params: { lang } });
  });
  return paths;
}

// --- Data Preparation ---
const { lang } = Astro.params;
const ui = uiLabels[lang] || uiLabels['en'];

// Helpers
const getText = (field, fallback = '') => {
  if (!field) return fallback;
  if (typeof field === 'string') return field;
  if (field[lang]) return field[lang];
  if (field['en']) return field['en'];
  return fallback;
};

const getArray = (field) => {
  if (!field) return [];
  if (Array.isArray(field)) return field;
  if (field[lang]) return field[lang];
  if (field['en']) return field['en'];
  return [];
};

// Helper to replace placeholders in UI text
const formatUIText = (text, hobby) => {
  return text.replace('{hobby}', getText(hobby?.name || ''));
};

// Get unique categories and cost ranges for filters
const categories = [
  {
    id: 'creative-artistic',
    label: {
      en: 'Creative & Artistic',
      es: 'Creativo y Artístico',
      de: 'Kreativ & Künstlerisch',
      fr: 'Créatif et Artistique',
      pt: 'Criativo e Artístico',
      ja: 'クリエイティブ&芸術',
      ar: 'إبداعي وفني',
      hi: 'रचनात्मक और कलात्मक'
    }
  },
  {
    id: 'health-wellness',
    label: {
      en: 'Health & Wellness',
      es: 'Salud y Bienestar',
      de: 'Gesundheit & Wellness',
      fr: 'Santé et Bien-être',
      pt: 'Saúde e Bem-estar',
      ja: '健康&ウェルネス',
      ar: 'الصحة والعافية',
      hi: 'स्वास्थ्य और कल्याण'
    }
  },
  {
    id: 'outdoor-adventure',
    label: {
      en: 'Outdoor & Adventure',
      es: 'Aire Libre y Aventura',
      de: 'Outdoor & Abenteuer',
      fr: 'Plein Air et Aventure',
      pt: 'Ar Livre e Aventura',
      ja: 'アウトドア&アドベンチャー',
      ar: 'خارجي ومغامرات',
      hi: 'आउटडोर और एडवेंचर'
    }
  },
  {
    id: 'tech-digital',
    label: {
      en: 'Tech & Digital',
      es: 'Tecnología y Digital',
      de: 'Technik & Digitales',
      fr: 'Technologie et Numérique',
      pt: 'Tecnologia e Digital',
      ja: 'テクノロジー&デジタル',
      ar: 'تقني ورقمي',
      hi: 'टेक और डिजिटल'
    }
  },
  {
    id: 'home-diy',
    label: {
      en: 'Home & DIY',
      es: 'Hogar y Bricolaje',
      de: 'Heim & Heimwerken',
      fr: 'Maison et Bricolage',
      pt: 'Casa e Bricolage',
      ja: 'ホーム&DIY',
      ar: 'المنزل والأعمال اليدوية',
      hi: 'घर और DIY'
    }
  },
  {
    id: 'collecting-knowledge',
    label: {
      en: 'Collecting & Knowledge',
      es: 'Coleccionismo y Conocimiento',
      de: 'Sammeln & Wissen',
      fr: 'Collection et Savoir',
      pt: 'Colecionismo e Conhecimento',
      ja: '収集&知識',
      ar: 'الجمع والمعرفة',
      hi: 'संग्रह और ज्ञान'
    }
  }
];
const costRanges = [
  { id: 'free', min: 0, max: 0, label: { en: 'Free', es: 'Gratis', de: 'Kostenlos', fr: 'Gratuit', pt: 'Grátis', ja: '無料', ar: 'مجاني', hi: 'मुफ्त' } },
  { id: 'budget', min: 1, max: 100, label: { en: 'Budget ($1-$100)', es: 'Económico ($1-$100)', de: 'Budget ($1-$100)', fr: 'Économique ($1-$100)', pt: 'Barato ($1-$100)', ja: '予算内 ($1-$100)', ar: 'اقتصادي ($1-$100)', hi: 'बजट ($1-$100)' } },
  { id: 'moderate', min: 101, max: 500, label: { en: 'Moderate ($101-$500)', es: 'Moderado ($101-$500)', de: 'Moderat ($101-$500)', fr: 'Modéré ($101-$500)', pt: 'Moderado ($101-$500)', ja: '中程度 ($101-$500)', ar: 'متوسط ($101-$500)', hi: 'मध्यम ($101-$500)' } },
  { id: 'premium', min: 501, max: 1000, label: { en: 'Premium ($501-$1000)', es: 'Premium ($501-$1000)', de: 'Premium ($501-$1000)', fr: 'Premium ($501-$1000)', pt: 'Premium ($501-$1000)', ja: 'プレミアム ($501-$1000)', ar: 'متميز ($501-$1000)', hi: 'प्रीमियम ($501-$1000)' } },
  { id: 'expensive', min: 1001, max: 999999, label: { en: 'Expensive ($1000+)', es: 'Caro ($1000+)', de: 'Teuer ($1000+)', fr: 'Cher ($1000+)', pt: 'Caro ($1000+)', ja: '高価 ($1000+)', ar: 'باهظ ($1000+)', hi: 'महंगा ($1000+)' } }
];

// Enhanced UI labels for hobbies page
const hobbiesPageLabels = {
  en: {
    pageTitle: 'Discover Your Perfect Hobby',
    pageSubtitle: 'Explore cost calculators for popular hobbies and find your next passion project',
    searchPlaceholder: 'Search hobbies...',
    filterByCategory: 'Filter by Category',
    filterByCost: 'Filter by Startup Cost',
    moneyMakingHobbies: 'Money-Making Hobbies',
    allCategories: 'All Categories',
    allCosts: 'All Costs',
    clearFilters: 'Clear Filters',
    hobbiesFound: 'hobbies found',
    calculateCost: 'Calculate Cost',
    startingFrom: 'Starting from',
    canEarnMoney: 'Can earn money',
    noHobbiesFound: 'No hobbies found matching your criteria',
    tryDifferentFilters: 'Try adjusting your filters or search terms',
    popularHobbies: 'Popular Hobbies',
    trendingNow: 'Trending Now',
    // SEO Content Translations
    whyCalculateTitle: 'Why Calculate Hobby Costs?',
    whyCalculateSubtitle: 'Make informed decisions about your next passion project',
    budgetPlanningTitle: 'Budget Planning',
    budgetPlanningText: 'Understanding the true cost of a hobby helps you budget effectively and avoid unexpected expenses. Our calculators show both beginner and advanced costs so you can plan your hobby journey.',
    compareOptionsTitle: 'Compare Options',
    compareOptionsText: 'Compare startup costs across different hobbies to find activities that fit your budget. Discover affordable alternatives to expensive hobbies without sacrificing enjoyment.',
    moneyMakingPotentialTitle: 'Money-Making Potential',
    moneyMakingPotentialText: 'Some hobbies can become income sources. Our calculators highlight hobbies with earning potential and show you the investment needed to start monetizing your passion.',
    avoidMistakesTitle: 'Avoid Common Mistakes',
    avoidMistakesText: 'Learn about essential vs. optional gear, quality considerations, and common beginner mistakes that can lead to overspending or frustration with your new hobby.'
  },
  es: {
    pageTitle: 'Descubre tu Hobby Perfecto',
    pageSubtitle: 'Explora calculadoras de costos para hobbies populares y encuentra tu próximo proyecto de pasión',
    searchPlaceholder: 'Buscar hobbies...',
    filterByCategory: 'Filtrar por Categoría',
    filterByCost: 'Filtrar por Costo Inicial',
    moneyMakingHobbies: 'Hobbies que Generan Dinero',
    allCategories: 'Todas las Categorías',
    allCosts: 'Todos los Costos',
    clearFilters: 'Limpiar Filtros',
    hobbiesFound: 'hobbies encontrados',
    calculateCost: 'Calcular Costo',
    startingFrom: 'Desde',
    canEarnMoney: 'Puede generar dinero',
    noHobbiesFound: 'No se encontraron hobbies que coincidan con tus criterios',
    tryDifferentFilters: 'Prueba ajustando tus filtros o términos de búsqueda',
    popularHobbies: 'Hobbies Populares',
    trendingNow: 'Tendencia Ahora',
    // SEO Content Translations
    whyCalculateTitle: '¿Por qué Calcular los Costos de los Hobbies?',
    whyCalculateSubtitle: 'Toma decisiones informadas sobre tu próximo proyecto de pasión',
    budgetPlanningTitle: 'Planificación de Presupuesto',
    budgetPlanningText: 'Comprender el costo real de un hobby te ayuda a presupuestar efectivamente y evitar gastos inesperados. Nuestras calculadoras muestran costos para principiantes y avanzados para que puedas planificar tu viaje de hobby.',
    compareOptionsTitle: 'Comparar Opciones',
    compareOptionsText: 'Compara los costos iniciales entre diferentes hobbies para encontrar actividades que se ajusten a tu presupuesto. Descubre alternativas asequibles a hobbies costosos sin sacrificar el disfrute.',
    moneyMakingPotentialTitle: 'Potencial de Ganar Dinero',
    moneyMakingPotentialText: 'Algunos hobbies pueden convertirse en fuentes de ingresos. Nuestras calculadoras destacan hobbies con potencial de ganancias y te muestran la inversión necesaria para comenzar a monetizar tu pasión.',
    avoidMistakesTitle: 'Evitar Errores Comunes',
    avoidMistakesText: 'Aprende sobre equipo esencial vs. opcional, consideraciones de calidad y errores comunes de principiantes que pueden llevar a gastos excesivos o frustración con tu nuevo hobby.'
  },
  de: {
    pageTitle: 'Entdecke dein perfektes Hobby',
    pageSubtitle: 'Erkunde Kostenrechner für beliebte Hobbys und finde dein nächstes Leidenschaftsprojekt',
    searchPlaceholder: 'Hobbys suchen...',
    filterByCategory: 'Nach Kategorie filtern',
    filterByCost: 'Nach Startkosten filtern',
    moneyMakingHobbies: 'Geld verdienende Hobbys',
    allCategories: 'Alle Kategorien',
    allCosts: 'Alle Kosten',
    clearFilters: 'Filter löschen',
    hobbiesFound: 'Hobbys gefunden',
    calculateCost: 'Kosten berechnen',
    startingFrom: 'Ab',
    canEarnMoney: 'Kann Geld verdienen',
    noHobbiesFound: 'Keine Hobbys gefunden, die deinen Kriterien entsprechen',
    tryDifferentFilters: 'Versuche deine Filter oder Suchbegriffe anzupassen',
    popularHobbies: 'Beliebte Hobbys',
    trendingNow: 'Trending jetzt',
    // SEO Content Translations
    whyCalculateTitle: 'Warum Hobby-Kosten berechnen?',
    whyCalculateSubtitle: 'Treffe informierte Entscheidungen für dein nächstes Leidenschaftsprojekt',
    budgetPlanningTitle: 'Budget-Planung',
    budgetPlanningText: 'Die wahren Kosten eines Hobbys zu verstehen hilft dir, effektiv zu budgetieren und unerwartete Ausgaben zu vermeiden. Unsere Rechner zeigen sowohl Anfänger- als auch fortgeschrittene Kosten, damit du deine Hobby-Reise planen kannst.',
    compareOptionsTitle: 'Optionen vergleichen',
    compareOptionsText: 'Vergleiche Startkosten verschiedener Hobbys, um Aktivitäten zu finden, die zu deinem Budget passen. Entdecke erschwingliche Alternativen zu teuren Hobbys, ohne auf den Spaß zu verzichten.',
    moneyMakingPotentialTitle: 'Geld-verdienen-Potenzial',
    moneyMakingPotentialText: 'Einige Hobbys können zu Einkommensquellen werden. Unsere Rechner heben Hobbys mit Verdienstpotenzial hervor und zeigen dir die nötige Investition, um deine Leidenschaft zu monetarisieren.',
    avoidMistakesTitle: 'Häufige Fehler vermeiden',
    avoidMistakesText: 'Lerne über wesentliche vs. optionale Ausrüstung, Qualitätsüberlegungen und häufige Anfängerfehler, die zu Mehrausgaben oder Frustration mit deinem neuen Hobby führen können.'
  },
  fr: {
    pageTitle: 'Découvrez votre Loisir Parfait',
    pageSubtitle: 'Explorez les calculateurs de coûts pour les loisirs populaires et trouvez votre prochain projet passion',
    searchPlaceholder: 'Rechercher des loisirs...',
    filterByCategory: 'Filtrer par Catégorie',
    filterByCost: 'Filtrer par Coût de Démarrage',
    moneyMakingHobbies: 'Loisirs qui Rapportent',
    allCategories: 'Toutes les Catégories',
    allCosts: 'Tous les Coûts',
    clearFilters: 'Effacer les Filtres',
    hobbiesFound: 'loisirs trouvés',
    calculateCost: 'Calculer le Coût',
    startingFrom: 'À partir de',
    canEarnMoney: 'Peut rapporter de l\'argent',
    noHobbiesFound: 'Aucun loisir trouvé correspondant à vos critères',
    tryDifferentFilters: 'Essayez d\'ajuster vos filtres ou termes de recherche',
    popularHobbies: 'Loisirs Populaires',
    trendingNow: 'Tendance Maintenant',
    // SEO Content Translations
    whyCalculateTitle: 'Pourquoi Calculer les Coûts des Loisirs?',
    whyCalculateSubtitle: 'Prenez des décisions éclairées pour votre prochain projet passion',
    budgetPlanningTitle: 'Planification Budgétaire',
    budgetPlanningText: 'Comprendre le vrai coût d\'un loisir vous aide à budgétiser efficacement et éviter les dépenses inattendues. Nos calculateurs montrent les coûts débutant et avancé pour planifier votre parcours loisir.',
    compareOptionsTitle: 'Comparer les Options',
    compareOptionsText: 'Comparez les coûts de démarrage entre différents loisirs pour trouver des activités qui correspondent à votre budget. Découvrez des alternatives abordables aux loisirs coûteux sans sacrifier le plaisir.',
    moneyMakingPotentialTitle: 'Potentiel de Gain',
    moneyMakingPotentialText: 'Certains loisirs peuvent devenir des sources de revenus. Nos calculateurs mettent en évidence les loisirs avec un potentiel de gain et vous montrent l\'investissement nécessaire pour monétiser votre passion.',
    avoidMistakesTitle: 'Éviter les Erreurs Communes',
    avoidMistakesText: 'Apprenez sur l\'équipement essentiel vs. optionnel, les considérations de qualité et les erreurs courantes de débutant qui peuvent mener à des dépenses excessives ou à la frustration avec votre nouveau loisir.'
  },
  pt: {
    pageTitle: 'Descubra seu Hobby Perfeito',
    pageSubtitle: 'Explore calculadoras de custos para hobbies populares e encontre seu próximo projeto de paixão',
    searchPlaceholder: 'Pesquisar hobbies...',
    filterByCategory: 'Filtrar por Categoria',
    filterByCost: 'Filtrar por Custo Inicial',
    moneyMakingHobbies: 'Hobbies que Geram Dinheiro',
    allCategories: 'Todas as Categorias',
    allCosts: 'Todos os Custos',
    clearFilters: 'Limpar Filtros',
    hobbiesFound: 'hobbies encontrados',
    calculateCost: 'Calcular Custo',
    startingFrom: 'A partir de',
    canEarnMoney: 'Pode gerar dinheiro',
    noHobbiesFound: 'Nenhum hobby encontrado que corresponda aos seus critérios',
    tryDifferentFilters: 'Tente ajustar seus filtros ou termos de pesquisa',
    popularHobbies: 'Hobbies Populares',
    trendingNow: 'Tendência Agora',
    // SEO Content Translations
    whyCalculateTitle: 'Por que Calcular Custos de Hobbies?',
    whyCalculateSubtitle: 'Tome decisões informadas sobre seu próximo projeto de paixão',
    budgetPlanningTitle: 'Planejamento de Orçamento',
    budgetPlanningText: 'Entender o custo real de um hobby ajuda você a orçar efetivamente e evitar gastos inesperados. Nossas calculadoras mostram custos para iniciantes e avançados para que você possa planejar sua jornada de hobby.',
    compareOptionsTitle: 'Comparar Opções',
    compareOptionsText: 'Compare custos iniciais entre diferentes hobbies para encontrar atividades que se adequem ao seu orçamento. Descubra alternativas acessíveis para hobbies caros sem sacrificar o prazer.',
    moneyMakingPotentialTitle: 'Potencial de Ganhar Dinheiro',
    moneyMakingPotentialText: 'Alguns hobbies podem se tornar fontes de renda. Nossas calculadoras destacam hobbies com potencial de ganho e mostram o investimento necessário para começar a monetizar sua paixão.',
    avoidMistakesTitle: 'Evitar Erros Comuns',
    avoidMistakesText: 'Aprenda sobre equipamentos essenciais vs. opcionais, considerações de qualidade e erros comuns de iniciantes que podem levar a gastos excessivos ou frustração com seu novo hobby.'
  },
  ja: {
    pageTitle: '完璧な趣味を見つけよう',
    pageSubtitle: '人気の趣味のコスト計算機を探索し、次の情熱プロジェクトを見つけましょう',
    searchPlaceholder: '趣味を検索...',
    filterByCategory: 'カテゴリーで絞り込み',
    filterByCost: '初期費用で絞り込み',
    moneyMakingHobbies: 'お金を稼げる趣味',
    allCategories: 'すべてのカテゴリー',
    allCosts: 'すべての費用',
    clearFilters: 'フィルターをクリア',
    hobbiesFound: '趣味が見つかりました',
    calculateCost: 'コストを計算',
    startingFrom: '開始価格',
    canEarnMoney: 'お金を稼げます',
    noHobbiesFound: '条件に一致する趣味が見つかりませんでした',
    tryDifferentFilters: 'フィルターや検索語句を調整してみてください',
    popularHobbies: '人気の趣味',
    trendingNow: 'トレンド中',
    // SEO Content Translations
    whyCalculateTitle: 'なぜ趣味のコストを計算するのか？',
    whyCalculateSubtitle: '次の情熱プロジェクトについて情報に基づいた決定を下す',
    budgetPlanningTitle: '予算計画',
    budgetPlanningText: '趣味の真のコストを理解することで、効果的に予算を立て、予期しない出費を避けることができます。私たちの計算機は初心者と上級者の両方のコストを表示し、趣味の旅を計画できます。',
    compareOptionsTitle: 'オプションを比較',
    compareOptionsText: '異なる趣味の初期費用を比較して、予算に合う活動を見つけましょう。楽しさを犠牲にせずに高価な趣味の手頃な代替案を発見してください。',
    moneyMakingPotentialTitle: 'お金を稼ぐ可能性',
    moneyMakingPotentialText: '一部の趣味は収入源になることができます。私たちの計算機は稼ぎのポテンシャルがある趣味を強調し、情熱を収益化するために必要な投資を示します。',
    avoidMistakesTitle: '一般的な間違いを避ける',
    avoidMistakesText: '必須対オプション装備、品質の考慮事項、そして新しい趣味での過度な支出や挫折につながる可能性がある一般的な初心者の間違いについて学びましょう。'
  },
  ar: {
    pageTitle: 'اكتشف هوايتك المثالية',
    pageSubtitle: 'استكشف حاسبات التكلفة للهوايات الشائعة واعثر على مشروع شغفك التالي',
    searchPlaceholder: 'البحث عن الهوايات...',
    filterByCategory: 'تصفية حسب الفئة',
    filterByCost: 'تصفية حسب تكلفة البداية',
    moneyMakingHobbies: 'هوايات مربحة',
    allCategories: 'جميع الفئات',
    allCosts: 'جميع التكاليف',
    clearFilters: 'مسح المرشحات',
    hobbiesFound: 'هواية موجودة',
    calculateCost: 'حساب التكلفة',
    startingFrom: 'ابتداءً من',
    canEarnMoney: 'يمكن أن تحقق دخلاً',
    noHobbiesFound: 'لم يتم العثور على هوايات تطابق معاييرك',
    tryDifferentFilters: 'جرب تعديل المرشحات أو مصطلحات البحث',
    popularHobbies: 'الهوايات الشائعة',
    trendingNow: 'الأكثر رواجاً الآن',
    // SEO Content Translations
    whyCalculateTitle: 'لماذا حساب تكاليف الهوايات؟',
    whyCalculateSubtitle: 'اتخذ قرارات مدروسة حول مشروع شغفك التالي',
    budgetPlanningTitle: 'تخطيط الميزانية',
    budgetPlanningText: 'فهم التكلفة الحقيقية للهواية يساعدك على وضع الميزانية بفعالية وتجنب النفقات غير المتوقعة. تُظهر حاسباتنا تكاليف المبتدئين والمتقدمين حتى تتمكن من التخطيط لرحلة هوايتك.',
    compareOptionsTitle: 'مقارنة الخيارات',
    compareOptionsText: 'قارن التكاليف الأولية بين الهوايات المختلفة للعثور على الأنشطة التي تناسب ميزانيتك. اكتشف البدائل الميسورة للهوايات المكلفة دون التضحية بالمتعة.',
    moneyMakingPotentialTitle: 'إمكانية كسب المال',
    moneyMakingPotentialText: 'يمكن لبعض الهوايات أن تصبح مصادر دخل. تُبرز حاسباتنا الهوايات ذات إمكانية الكسب وتُظهر لك الاستثمار المطلوب لبدء تحويل شغفك إلى أرباح.',
    avoidMistakesTitle: 'تجنب الأخطاء الشائعة',
    avoidMistakesText: 'تعلم عن المعدات الأساسية مقابل الاختيارية، اعتبارات الجودة، والأخطاء الشائعة للمبتدئين التي يمكن أن تؤدي إلى الإنفاق المفرط أو الإحباط مع هوايتك الجديدة.'
  },
  hi: {
    pageTitle: 'अपना सही शौक खोजें',
    pageSubtitle: 'लोकप्रिय शौक के लिए लागत कैलकुलेटर देखें और अपना अगला जुनून प्रोजेक्ट खोजें',
    searchPlaceholder: 'शौक खोजें...',
    filterByCategory: 'श्रेणी के अनुसार फ़िल्टर करें',
    filterByCost: 'शुरुआती लागत के अनुसार फ़िल्टर करें',
    moneyMakingHobbies: 'पैसा कमाने वाले शौक',
    allCategories: 'सभी श्रेणियां',
    allCosts: 'सभी लागतें',
    clearFilters: 'फ़िल्टर साफ़ करें',
    hobbiesFound: 'शौक मिले',
    calculateCost: 'लागत की गणना करें',
    startingFrom: 'शुरुआत से',
    canEarnMoney: 'पैसा कमा सकता है',
    noHobbiesFound: 'आपके मापदंडों से मेल खाने वाला कोई शौक नहीं मिला',
    tryDifferentFilters: 'अपने फ़िल्टर या खोज शब्दों को समायोजित करने का प्रयास करें',
    popularHobbies: 'लोकप्रिय शौक',
    trendingNow: 'अब ट्रेंडिंग',
    // SEO Content Translations
    whyCalculateTitle: 'शौक की लागत क्यों निकालें?',
    whyCalculateSubtitle: 'अपने अगले जुनून प्रोजेक्ट के बारे में सूचित निर्णय लें',
    budgetPlanningTitle: 'बजट योजना',
    budgetPlanningText: 'किसी शौक की वास्तविक लागत को समझना आपको प्रभावी रूप से बजट बनाने और अप्रत्याशित खर्चों से बचने में मदद करता है। हमारे कैलकुलेटर शुरुआती और उन्नत दोनों लागत दिखाते हैं ताकि आप अपनी शौक यात्रा की योजना बना सकें।',
    compareOptionsTitle: 'विकल्पों की तुलना करें',
    compareOptionsText: 'अपने बजट में फिट होने वाली गतिविधियों को खोजने के लिए विभिन्न शौकों के बीच स्टार्टअप लागत की तुलना करें। आनंद का त्याग किए बिना महंगे शौकों के लिए सस्ते विकल्प खोजें।',
    moneyMakingPotentialTitle: 'पैसा कमाने की संभावना',
    moneyMakingPotentialText: 'कुछ शौक आय के स्रोत बन सकते हैं। हमारे कैलकुलेटर कमाई की संभावना वाले शौकों को उजागर करते हैं और आपको अपने जुनून को मुद्रीकृत करने के लिए आवश्यक निवेश दिखाते हैं।',
    avoidMistakesTitle: 'सामान्य गलतियों से बचें',
    avoidMistakesText: 'आवश्यक बनाम वैकल्पिक उपकरण, गुणवत्ता विचार, और सामान्य शुरुआती गलतियों के बारे में जानें जो आपके नए शौक के साथ अधिक खर्च या निराशा का कारण बन सकती हैं।'
  }
};

const pageLabels = hobbiesPageLabels[lang] || hobbiesPageLabels['en'];

// SEO metadata
const seoTitle = `${pageLabels.pageTitle} | Cost Calculator & Guides`;
const seoDescription = `Discover startup costs for 100+ hobbies. Calculate expenses for photography, fitness, cooking, art, and more. Find your perfect hobby with our comprehensive cost guides.`;
const seoKeywords = `hobby cost calculator, startup costs, hobby expenses, photography costs, fitness expenses, cooking budget, art supplies, hobby guide, beginner hobbies`;

// Debug: Filter out invalid hobbies
const validHobbies = hobbies.filter(hobby => {
  return hobby && 
         hobby.id && 
         (hobby.name || hobby.title) && 
         typeof hobby === 'object';
});

console.log(`Total hobbies: ${hobbies.length}, Valid hobbies: ${validHobbies.length}`);
---

<Layout title={seoTitle} description={seoDescription} lang={lang}>
  <!-- SEO Meta Tags -->
  <meta name="keywords" content={seoKeywords} />
  <meta name="robots" content="index, follow" />
  <meta property="og:title" content={seoTitle} />
  <meta property="og:description" content={seoDescription} />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={seoTitle} />
  <meta name="twitter:description" content={seoDescription} />
  
  <!-- Structured Data for SEO -->
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": "HobbyCalc",
      "description": "Calculate the true cost of starting any hobby with our comprehensive cost calculators and guides.",
      "url": `https://hobbycalc.com/${lang}/hobbies`,
      "potentialAction": {
        "@type": "SearchAction",
        "target": `https://hobbycalc.com/${lang}/hobbies?search={search_term_string}`,
        "query-input": "required name=search_term_string"
      }
    }
  </script>

  <div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50">
    <!-- Hero Section -->
    <div class="relative overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-r from-indigo-600/10 to-purple-600/10"></div>
      <div class="relative max-w-7xl mx-auto px-4 py-8">
        <!-- Breadcrumb -->
        <nav class="flex items-center space-x-2 text-sm text-gray-600 mb-6" aria-label="Breadcrumb">
          <a href={`/${lang}/`} class="hover:text-indigo-600 transition-colors">{ui.home}</a>
          <span class="text-gray-400">/</span>
          <span class="text-gray-900 font-medium">{ui.hobbies}</span>
        </nav>

        <!-- Header -->
        <div class="text-center mb-8">
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            <span class="bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
              {pageLabels.pageTitle}
            </span>
          </h1>
          <p class="text-lg text-gray-600 max-w-2xl mx-auto">
            {pageLabels.pageSubtitle}
          </p>
        </div>

        <!-- Search Bar -->
        <div class="max-w-2xl mx-auto mb-8">
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
            <input 
              type="text" 
              id="search-input"
              class="block w-full pl-10 pr-3 py-4 border border-gray-300 rounded-2xl leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-transparent shadow-lg text-lg"
              placeholder={pageLabels.searchPlaceholder}
            >
          </div>
        </div>
      </div>
    </div>

    <!-- Filters and Content -->
    <div class="max-w-7xl mx-auto px-4 pb-12">
      <!-- Filter Section -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mb-8">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
          <!-- Category Filter -->
          <div>
            <label class="block text-sm font-semibold text-gray-700 mb-3">{pageLabels.filterByCategory}</label>
            <select id="category-filter" class="w-full p-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
              <option value="">{pageLabels.allCategories}</option>
              {categories.map(category => (
                <option value={category.id}>{getText(category.label)}</option>
              ))}
            </select>
          </div>

          <!-- Cost Filter -->
          <div>
            <label class="block text-sm font-semibold text-gray-700 mb-3">{pageLabels.filterByCost}</label>
            <select id="cost-filter" class="w-full p-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
              <option value="">{pageLabels.allCosts}</option>
              {costRanges.map(range => (
                <option value={range.id}>{getText(range.label)}</option>
              ))}
            </select>
          </div>

          <!-- Money-Making Filter -->
          <div>
            <label class="block text-sm font-semibold text-gray-700 mb-3">{pageLabels.moneyMakingHobbies}</label>
            <label class="flex items-center">
              <input type="checkbox" id="money-making-filter" class="w-5 h-5 text-indigo-600 bg-gray-100 border-gray-300 rounded focus:ring-indigo-500 focus:ring-2">
              <span class="ml-3 text-gray-700">{pageLabels.canEarnMoney}</span>
            </label>
          </div>

          <!-- Clear Filters -->
          <div class="flex items-end">
            <button id="clear-filters" class="w-full px-4 py-3 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 transition-colors font-semibold">
              {pageLabels.clearFilters}
            </button>
          </div>
        </div>

        <!-- Results Counter -->
        <div class="mt-4 pt-4 border-t border-gray-100">
          <p class="text-gray-600">
            <span id="results-count" class="font-semibold text-indigo-600">0</span>
            <span class="ml-1">{pageLabels.hobbiesFound}</span>
          </p>
        </div>
      </div>

      <!-- Hobbies Grid -->
      <div id="hobbies-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
        <!-- Hobbies will be populated by JavaScript -->
      </div>

      <!-- No Results Message -->
      <div id="no-results" class="hidden text-center py-12">
        <div class="max-w-md mx-auto">
          <div class="w-24 h-24 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center">
            <svg class="w-12 h-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.137 0-4.146-.832-5.636-2.364M8.364 8.636a4 4 0 015.272 0" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-gray-900 mb-2">{pageLabels.noHobbiesFound}</h3>
          <p class="text-gray-600">{pageLabels.tryDifferentFilters}</p>
        </div>
      </div>

      <!-- AdSense Ad Space -->
      <div class="bg-gray-100 rounded-2xl p-8 text-center mb-8 border-2 border-dashed border-gray-300">
        <p class="text-gray-500 text-sm">{ui.advertisementSpace}</p>
        <p class="text-gray-400 text-xs mt-1">{ui.adUnit728}</p>
      </div>

      <!-- SEO Content Section - Now with translations -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden mb-8">
        <div class="p-6 bg-gradient-to-r from-indigo-50 to-purple-50 border-b">
          <h2 class="text-2xl font-bold text-gray-900">{pageLabels.whyCalculateTitle}</h2>
          <p class="text-gray-600 mt-2">{pageLabels.whyCalculateSubtitle}</p>
        </div>
        <div class="p-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 class="text-lg font-semibold text-gray-900 mb-3">{pageLabels.budgetPlanningTitle}</h3>
              <p class="text-gray-600 text-sm leading-relaxed">
                {pageLabels.budgetPlanningText}
              </p>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-900 mb-3">{pageLabels.compareOptionsTitle}</h3>
              <p class="text-gray-600 text-sm leading-relaxed">
                {pageLabels.compareOptionsText}
              </p>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-900 mb-3">{pageLabels.moneyMakingPotentialTitle}</h3>
              <p class="text-gray-600 text-sm leading-relaxed">
                {pageLabels.moneyMakingPotentialText}
              </p>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-900 mb-3">{pageLabels.avoidMistakesTitle}</h3>
              <p class="text-gray-600 text-sm leading-relaxed">
                {pageLabels.avoidMistakesText}
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <footer class="bg-gray-900 text-gray-300 py-12">
      <div class="max-w-7xl mx-auto px-4">
        <div class="grid grid-cols-2 md:grid-cols-5 gap-8">
          <div class="col-span-2">
            <h3 class="text-xl font-bold text-white mb-4">🎨 HobbyCalc</h3>
            <p class="text-gray-400 mb-4">{ui.calculateTrueCost}</p>
          </div>
          <div>
            <h4 class="font-semibold text-white mb-3">{ui.quickLinks}</h4>
            <div class="space-y-2 text-sm">
              <a href={`/${lang}/`} class="block hover:text-white transition-colors">{ui.home}</a>
              <a href={`/${lang}/hobbies`} class="block hover:text-white transition-colors">{ui.allHobbies}</a>
            </div>
          </div>
          <div>
            <h4 class="font-semibold text-white mb-3">{ui.legal}</h4>
            <div class="space-y-2 text-sm">
              <a href={`/${lang}/privacy`} class="block hover:text-white transition-colors">{ui.privacyPolicy}</a>
              <a href={`/${lang}/terms`} class="block hover:text-white transition-colors">{ui.termsOfService}</a>
              <a href={`/${lang}/disclaimer`} class="block hover:text-white transition-colors">{ui.disclaimer}</a>
            </div>
          </div>
          <div>
            <h4 class="font-semibold text-white mb-3">{ui.contact}</h4>
            <div class="space-y-2 text-sm">
              <a href={`/${lang}/contact`} class="block hover:text-white transition-colors">{ui.getInTouch}</a>
              <a href={`/${lang}/about`} class="block hover:text-white transition-colors">{ui.aboutUs}</a>
            </div>
          </div>
        </div>
        <div class="border-t border-gray-800 mt-8 pt-8 text-center text-sm text-gray-400">
          © 2025 HobbyCalc. {ui.allRightsReserved}.
        </div>
      </div>
    </footer>
  </div>

  <!-- JavaScript -->
  <script define:vars={{ validHobbies, currencyData, costRanges, pageLabels, lang, ui, categories }}>
    class HobbiesPage {
      constructor() {
        // Use validHobbies instead of hobbies to ensure we only work with proper data
        this.hobbies = validHobbies || [];
        this.filteredHobbies = [...this.hobbies];
        this.pageLabels = pageLabels;
        this.lang = lang;
        this.ui = ui;
        this.costRanges = costRanges;
        this.categories = categories;
        
        // Debug logging
        console.log('Initializing HobbiesPage with:', this.hobbies.length, 'hobbies');
        if (this.hobbies.length > 0) {
          console.log('First hobby:', this.hobbies[0]);
        }
        
        this.init();
      }

      init() {
        this.bindElements();
        this.attachEventListeners();
        this.renderHobbies();
        this.updateResultsCount();
      }

      bindElements() {
        this.searchInput = document.getElementById('search-input');
        this.categoryFilter = document.getElementById('category-filter');
        this.costFilter = document.getElementById('cost-filter');
        this.moneyMakingFilter = document.getElementById('money-making-filter');
        this.clearFiltersBtn = document.getElementById('clear-filters');
        this.hobbiesGrid = document.getElementById('hobbies-grid');
        this.noResults = document.getElementById('no-results');
        this.resultsCount = document.getElementById('results-count');
      }

      attachEventListeners() {
        if (this.searchInput) this.searchInput.addEventListener('input', () => this.applyFilters());
        if (this.categoryFilter) this.categoryFilter.addEventListener('change', () => this.applyFilters());
        if (this.costFilter) this.costFilter.addEventListener('change', () => this.applyFilters());
        if (this.moneyMakingFilter) this.moneyMakingFilter.addEventListener('change', () => this.applyFilters());
        if (this.clearFiltersBtn) this.clearFiltersBtn.addEventListener('click', () => this.clearAllFilters());
      }

      getText(field, fallback = '') {
        if (!field) return fallback;
        if (typeof field === 'string') return field;
        if (field[this.lang]) return field[this.lang];
        if (field['en']) return field['en'];
        return fallback;
      }

      getTotalMinCost(hobby) {
        if (!hobby) return 0;
        if (!hobby.breakdown || !hobby.breakdown.beginner) return 0;
        const beginnerItems = hobby.breakdown.beginner.keyItems || [];
        return beginnerItems.reduce((total, item) => {
          if (item && item.cost && Array.isArray(item.cost)) {
            return total + (item.cost[0] || 0);
          }
          return total;
        }, 0);
      }

      formatPrice(amount) {
        const formatter = new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: 'USD',
          maximumFractionDigits: 0
        });
        return formatter.format(amount);
      }

      applyFilters() {
        const searchTerm = this.searchInput ? this.searchInput.value.toLowerCase() : '';
        const selectedCategory = this.categoryFilter ? this.categoryFilter.value : '';
        const selectedCost = this.costFilter ? this.costFilter.value : '';
        const moneyMakingOnly = this.moneyMakingFilter ? this.moneyMakingFilter.checked : false;

        this.filteredHobbies = this.hobbies.filter(hobby => {
          if (!hobby) return false;

          // Search filter
          if (searchTerm) {
            const name = this.getText(hobby.name || hobby.title || '').toLowerCase();
            const description = this.getText(hobby.description || hobby.desc || '').toLowerCase();
            if (!name.includes(searchTerm) && !description.includes(searchTerm)) {
              return false;
            }
          }

          // Category filter
          if (selectedCategory && hobby.category !== selectedCategory) {
            return false;
          }

          // Cost filter
          if (selectedCost) {
            const costRange = this.costRanges.find(r => r.id === selectedCost);
            if (costRange) {
              const totalMinCost = this.getTotalMinCost(hobby);
              if (selectedCost === 'free' && totalMinCost !== 0) {
                return false;
              } else if (selectedCost !== 'free' && (totalMinCost < costRange.min || totalMinCost > costRange.max)) {
                return false;
              }
            }
          }

          // Money-making filter
          if (moneyMakingOnly && !hobby.canEarnMoney) {
            return false;
          }

          return true;
        });

        console.log('Filtered hobbies:', this.filteredHobbies.length);
        this.renderHobbies();
        this.updateResultsCount();
      }

      clearAllFilters() {
        if (this.searchInput) this.searchInput.value = '';
        if (this.categoryFilter) this.categoryFilter.value = '';
        if (this.costFilter) this.costFilter.value = '';
        if (this.moneyMakingFilter) this.moneyMakingFilter.checked = false;
        this.applyFilters();
      }

      updateResultsCount() {
        if (this.resultsCount) {
          this.resultsCount.textContent = this.filteredHobbies.length;
        }
        
        if (this.filteredHobbies.length === 0) {
          if (this.hobbiesGrid) this.hobbiesGrid.classList.add('hidden');
          if (this.noResults) this.noResults.classList.remove('hidden');
        } else {
          if (this.hobbiesGrid) this.hobbiesGrid.classList.remove('hidden');
          if (this.noResults) this.noResults.classList.add('hidden');
        }
      }

      getCategoryLabel(categoryId) {
        const category = this.categories.find(cat => cat.id === categoryId);
        return category ? this.getText(category.label) : categoryId;
      }

      getHobbyName(hobby) {
        return this.getText(hobby.name || hobby.title || 'Unnamed Hobby');
      }

      getHobbyDescription(hobby) {
        return this.getText(hobby.description || hobby.desc || '');
      }

      renderHobbies() {
        if (!this.hobbiesGrid) {
          console.error('Hobbies grid element not found');
          return;
        }

        this.hobbiesGrid.innerHTML = '';
        
        if (this.filteredHobbies.length === 0) {
          console.log('No hobbies to render');
          return;
        }
        
        this.filteredHobbies.forEach((hobby, index) => {
          if (!hobby || !hobby.id) {
            console.warn('Invalid hobby at index', index, hobby);
            return;
          }

          const totalMinCost = this.getTotalMinCost(hobby);
          const hobbyCard = document.createElement('div');
          hobbyCard.className = 'hobby-card bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden hover:shadow-xl transition-all duration-300 hover:-translate-y-1';
          
          const hobbyName = this.getHobbyName(hobby);
          const hobbyDescription = this.getHobbyDescription(hobby);
          
          hobbyCard.innerHTML = `
            <div class="relative">
              <div class="h-48 bg-gradient-to-br from-indigo-100 to-purple-100 flex items-center justify-center">
                <div class="text-6xl">${hobby.icon || '🎨'}</div>
              </div>
              ${hobby.canEarnMoney ? `
                <div class="absolute top-3 right-3">
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                    💰 ${this.pageLabels.canEarnMoney}
                  </span>
                </div>
              ` : ''}
            </div>
            
            <div class="p-6">
              <div class="mb-4">
                <h3 class="text-xl font-bold text-gray-900 mb-2">${hobbyName}</h3>
                <p class="text-gray-600 text-sm leading-relaxed">${hobbyDescription}</p>
              </div>
              
              <div class="flex items-center justify-between mb-4">
                <div>
                  <p class="text-sm text-gray-500">${this.pageLabels.startingFrom}</p>
                  <p class="text-2xl font-bold text-indigo-600">${this.formatPrice(totalMinCost)}</p>
                </div>
                ${hobby.category ? `
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                    ${this.getCategoryLabel(hobby.category)}
                  </span>
                ` : ''}
              </div>
              
              <a href="/${this.lang}/hobbies/${hobby.id}" 
                 class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white text-center py-3 px-4 rounded-xl font-semibold hover:from-indigo-700 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl block">
                ${this.pageLabels.calculateCost}
              </a>
            </div>
          `;
          
          this.hobbiesGrid.appendChild(hobbyCard);
          
          // Add entrance animation
          setTimeout(() => {
            hobbyCard.style.opacity = '0';
            hobbyCard.style.transform = 'translateY(20px)';
            hobbyCard.style.transition = 'all 0.3s ease';
            setTimeout(() => {
              hobbyCard.style.opacity = '1';
              hobbyCard.style.transform = 'translateY(0)';
            }, index * 50);
          }, 10);
        });

        console.log('Rendered', this.filteredHobbies.length, 'hobby cards');
      }
    }

    // Initialize when DOM is loaded
    document.addEventListener('DOMContentLoaded', () => {
      console.log('DOM loaded, initializing HobbiesPage');
      try {
        new HobbiesPage();
      } catch (error) {
        console.error('Error initializing HobbiesPage:', error);
      }
    });
  </script>

  <!-- Custom Styles -->
  <style>
    .hobby-card {
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .hobby-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    }

    /* Smooth scrolling */
    html {
      scroll-behavior: smooth;
    }

    /* Custom scrollbar for better UX */
    ::-webkit-scrollbar {
      width: 8px;
    }

    ::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb {
      background: #c1c1c1;
      border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background: #a8a8a8;
    }

    /* Loading states */
    .loading {
      opacity: 0.6;
      pointer-events: none;
    }

    /* Responsive grid adjustments */
    @media (max-width: 768px) {
      .hobby-card {
        margin-bottom: 1rem;
      }
    }

    /* Focus styles for accessibility */
    .hobby-card:focus-within {
      ring: 2px;
      ring-color: rgba(99, 102, 241, 0.5);
      ring-offset: 2px;
    }

    /* Animation keyframes */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .animate-fadeInUp {
      animation: fadeInUp 0.5s ease-out forwards;
    }

    /* Search input focus effects */
    #search-input:focus {
      box-shadow: 0 10px 25px -5px rgba(99, 102, 241, 0.1);
    }

    /* Filter section styling */
    select:focus {
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
    }

    /* Checkbox styling */
    input[type="checkbox"]:checked {
      background-color: rgb(99, 102, 241);
      border-color: rgb(99, 102, 241);
    }

    /* Button hover effects */
    button:hover {
      transform: translateY(-1px);
    }

    /* Card content spacing */
    .hobby-card p {
      line-height: 1.6;
    }

    /* Grid responsive behavior */
    .grid-responsive {
      display: grid;
      gap: 1.5rem;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }

    /* No results styling */
    #no-results {
      min-height: 400px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    /* Results counter styling */
    #results-count {
      font-weight: 700;
      color: rgb(99, 102, 241);
    }
